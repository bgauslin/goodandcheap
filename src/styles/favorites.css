/* -------------------------------------------------------------------------- */
/* Favorites view via a <button> that toggles a <dialog>. */
/* -------------------------------------------------------------------------- */

/**
 * [1] The 'display' override lets us place the <button> within its parent
 *     header's grid.
 */
gc-favorites {
  display: contents;  /* [1] */

  /*
   * Open/close button.
   */
  .toggle {
    cursor: pointer;
    display: grid;
    grid: 'count button' auto / auto;
    grid-area: favorites;
    place-self: center end;
    place-items: center;
  }

  .toggle.added {
    animation: .5s 1 bounce;
  }

  .favorite--toggle, .close {
    grid-area: button;
  }

  .toggle .count {
    background-color: var(--brand-color);
    block-size: 1rem;
    border-radius: 1rem;
    color: var(--text-color-inverted);
    display: grid;
    grid-area: count;
    margin-inline: auto -.375rem;
    min-inline-size: 1rem;
    padding-inline: .3em;
    place-content: center;
    letter-spacing: 0;
  }

  /**
   * The <dialog> is full-screen with a .main element that mimics the layout
   * of the <main> element. Within the .main element is the .panel element
   * which actually behaves like a modal dialog. This nesting allows us to
   * adopt the layout of the rest of the app and apply transitions to the modal.
   *
   * [1] Override to enable transitions.
   * [2] Browser overrides for fullscreen layout.
   * [3] Ensure <dialog> is hidden since it also has a 'display' override.
   */
  dialog {
    background: none;
    block-size: 100dvh;
    border: none;
    color: inherit;
    display: grid;  /* [1] */
    grid: var(--app-grid);
    inline-size: 100dvw;
    margin: 0;
    max-block-size: 100dvh;  /* [2] */
    max-inline-size: 100dvw;  /* [2] */
    outline: none;
    overflow: auto;
    padding: 0;
    
    &:not([open]) {
      display: none;  /* [3] */
    }
  
    &::backdrop {
      background: none;
    }
  }

  /**
   * Container element whose layout mimics the <main> element.
   * [1] Prevent dialog element from overlapping header border.
   */
  .main {
    block-size: calc(100% - 1px);
    display: grid;
    grid: 1fr / 1fr;
    margin-block-start: 1px;  /* [1] */
    overflow: hidden;
    grid-area: 2 / 2;
  }

  /**
   * Modal element with transitions applied to it.
   */
  .panel {
    aspect-ratio: var(--dialog-panel-aspect-ratio);
    background-color: var(--content-background);
    border: var(--dialog-border);
    border-radius: var(--dialog-border-radius);
    display: grid;
    grid: var(--dialog-panel-grid);
    margin-block: var(--dialog-panel-margin-block);
    min-block-size: var(--dialog-panel-min-block-size);
    overflow: auto;
    scrollbar-width: none;
    transition: transform var(--transition);

    &::-webkit-scrollbar {
      display: none;
    }
  }

  dialog[inert] .panel {
    transform: translateY(100%);
  }

  /**
   * Layout container for the heading.
   */
  .meta {
    aspect-ratio: var(--dialog-meta-aspect-ratio);
    backdrop-filter: var(--backdrop-filter);
    background-color: var(--callout-background);
    border-block-end: var(--dialog-meta-border-block);
    border-inline-end: var(--dialog-meta-border-inline);
    display: grid;
    grid: 1fr / 1fr;
    grid-area: meta;
    inset-block: 0 auto;
    overflow: hidden;
    place-self: var(--dialog-meta-place-self);
    position: sticky;
    z-index: 1;
  }

  h1 {
    font-size: 100%;
    margin: 0;
    padding-block: .75em;
    place-self: center;
    pointer-events: none;
    text-align: center;
  }

  /**
   * Previews of favorited recipes.
   */
  .previews {
    border-block-end: 1px solid var(--border-color);
    grid-area: previews;
    place-self: start stretch;
  }

  .previews__item:first-child {
    border-block-start: none;
  }
}

/**
 * Animation for adding a favorite.
 */
@keyframes bounce {
  25% {
    transform: scale(.8);
  }

  50% {
    transform: scale(1.3);
  }

  75% {
    transform: scale(.9);
  }

  100% {
    transform: scale(1);
  }
}
