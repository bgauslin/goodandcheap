/* -------------------------------------------------------------------------- */
/* Checkbox and button styles for saving/removing recipes. */
/* -------------------------------------------------------------------------- */

/**
 * All favorites checkboxes and buttons.
 */
:is(.close, .favorite, .remove) {
  aspect-ratio: 1;

  svg {
    inline-size: var(--icon-size);
    stroke-linecap: round;
  }
}

/**
 * Chapter and recipe 'favorite' checkboxes, 'remove favorite' button.
 */
:is(.favorite--preview, .favorite--recipe, .remove) {
  inset-block: .5rem auto;
  inset-inline: auto .5rem;
  position: absolute;

  svg {
    stroke: var(--icon-color);
  }
}

/**
 * Typical 'favorite' icon.
 */
.favorite svg {
  fill: none;
  stroke-width: 2.5;
}

/**
 * Chapter and recipe 'favorite' checkboxes.
 */
:is(.favorite--preview, .favorite--recipe) {
  block-size: var(--button-size);
  border-radius: var(--button-size);
  cursor: pointer;
  display: grid;
  grid: 1fr / 1fr;
  place-items: center;
  
  :is(input, svg) {
    grid-area: 1 / 1;
  }

  input[checked] + svg {
    fill: var(--icon-favorite-background);
    stroke: var(--icon-favorite-color);
  }

  &.touch,
  &:has(input:focus-visible) {
    svg {
      stroke: var(--icon-favorite-color);
    }
  }

  &:has(input:focus-visible) {
    background-color: var(--button-hover-background);
  }

  @media (any-hover: hover) {
    & svg {
      transition: fill var(--transition), stroke var(--transition);
    }

    &:hover svg {
      stroke: var(--icon-favorite-color);
    }
  }
}

/**
 * The 'favorite' button that toggles a <dialog>.
 */
.favorite--toggle {
  background: none;

  svg {
    stroke: currentColor;
  }
}

/**
 * The 'close' button that appears when the <dialog> is open.
 */
.close {
  background: none;
  color: inherit;

  svg {
    stroke: currentColor;
    stroke-width: 2.5;
  }
}

/**
 * Typical 'remove favorite' button.
 */
.remove  {
  display: grid;
  place-items: center;

  svg {
    border: 2px solid var(--icon-color);
    border-radius: var(--icon-size);
    stroke-width: 3;
  }

  &,
  &.touch {
    background: none;
  }

  &.touch,
  &:focus-visible {
    svg {
      background-color: var(--icon-remove-background);
      border-color: var(--icon-remove-color);
      stroke: var(--icon-remove-color);
    }
  }

  @media (any-hover: hover) {
    &:hover {
      background: none;
    }

    & svg {
      transition: background-color var(--transition), border-color var(--transition), stroke var(--transition);
    }

    &:hover svg {
      background-color: var(--icon-remove-background);
      border-color: var(--icon-remove-color);
      stroke: var(--icon-remove-color);
    }
  }
}
